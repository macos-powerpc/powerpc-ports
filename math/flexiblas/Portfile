# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           compilers 1.0
PortGroup           github 1.0
PortGroup           legacysupport 1.1

# getline, strndup, strnlen
legacysupport.newest_darwin_requires_legacy 10

# Commit-based until next release, see: https://github.com/mpimd-csc/flexiblas/issues/80
github.setup        mpimd-csc flexiblas 04021ceada30f136036a22dc6c811b3d352b199d
version             3.8.82
revision            0
categories          math science
license             GPL-3+
maintainers         {@barracuda156 macos-powerpc.org:barracuda} openmaintainer
description         A BLAS and LAPACK wrapper library with runtime exchangeable backends
long_description    {*}${description}
homepage            https://www.mpi-magdeburg.mpg.de/projects/flexiblas
checksums           rmd160  7add37bc2648c42e7668dd4ac2dc078e58e5cf0f \
                    sha256  f2001be47e1865268e5eed673a9bf42b3c75daac92810844c6559b0a55439cf9 \
                    size    137676292
github.tarball_from archive

# https://github.com/mpimd-csc/flexiblas/issues/40
depends_lib-append  port:blis \
                    path:lib/libopenblas.dylib:OpenBLAS

# https://github.com/mpimd-csc/flexiblas/issues/37
patchfiles-append   patch-remove-faulty-flags.diff

set py_ver          3.13
set py_ver_nodot    [string map {. {}} ${py_ver}]
configure.python    ${prefix}/bin/python${py_ver}

post-patch {
    reinplace "s,/usr/bin/env python,${configure.python}," \
                    ${worksrcpath}/test/usage/python-numpy-scipy/numpy-scipy-benchmark.py
}

compilers.setup     require_fortran
compiler.thread_local_storage yes
compiler.openmp_version 2.5
compiler.c_standard 1999

configure.args-append \
                    -DABI=GNU \
                    -DAGGREGATE_FILES=ON \
                    -DBLAS_AUTO_DETECT=ON \
                    -DBUILD_SHARED_LIBS=ON \
                    -DDEV=OFF \
                    -DEXAMPLES=OFF \
                    -DLAPACK=ON \
                    -DLINK_OPENMP=ON \
                    -DMKL_BUILDER=OFF \
                    -DPython_EXECUTABLE=${prefix}/bin/python${py_ver} \
                    -DTESTS=ON

if {[string match *clang* ${configure.compiler}]} {
    configure.ldflags-append \
                    -L${prefix}/lib/libomp \
                    -lomp
}

# Do not depend on atlas by default, since it presently does not build on Catalina and newer,
# while on older systems it requires building multiple extra gcc/libgcc versions.
variant atlas description "Build with Atlas support" {
    depends_lib-append \
                    port:atlas
}

depends_test-append port:python${py_ver_nodot}

test.run            yes
test.target         test
test.cmd-prepend    DYLD_LIBRARY_PATH=${cmake.build_dir}/lib
