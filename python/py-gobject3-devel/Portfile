# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-gobject3-devel
set my_name         pygobject
version             3.54.5
revision            0
categories-append   gnome
license             LGPL-2.1+
maintainers         {devans @dbevans} {mascguy @mascguy} openmaintainer

description         Python bindings for GObject, version 3
long_description    PyGObject is a Python dynamic module that enables developers to use \
                    the power of GObject, which is part of the GNOME platform.
homepage            https://pygobject.readthedocs.io

checksums           rmd160  fd666d9f671321afa8ccef5dbf7b311f865d4ce3 \
                    sha256  b6656f6348f5245606cf15ea48c384c7f05156c75ead206c1b246c80a22fb585 \
                    size    1274658

python.versions     310 311 312 313 314

# FIXME: need to conflict with non-devel subports.
if {${subport} ne ${name}} {
    set branch              [join [lrange [split ${version} .] 0 1] .]
    master_sites            gnome:sources/${my_name}/${branch}/
    distname                ${my_name}-${version}

    python.pep517_backend   meson

    depends_build-append    path:bin/pkg-config:pkgconfig \
                            port:py${python.version}-packaging \
                            port:py${python.version}-setuptools

    depends_lib-append      path:lib/pkgconfig/glib-2.0.pc:glib2-devel \
                            path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection-devel \
                            port:libffi \
                            port:py${python.version}-cairo

    compiler.c_standard     2011

    # uses g-ir-scanner, which uses $CC from env
    if {${universal_possible} && [variant_isset universal]} {
        foreach arch ${configure.universal_archs} {
            lappend merger_build_env(${arch}) \
                            "CC=${configure.cc} -arch ${arch}"
            lappend merger_destroot_env(${arch}) \
                            "CC=${configure.cc} -arch ${arch}"
        }
    } else {
        build.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
        destroot.env-append "CC=${configure.cc} ${configure.cc_archflags}"
    }

    configure.args-append   -Dpycairo=enabled \
                            -Dpython=${python.bin} \
                            -Dtests=false

    # Hack: For now, manually install pkgconfig, as a wheel-based build disables that
    post-destroot {
        set pc_src_file "${worksrcpath}/pygobject-3.0.pc.in"
        set pc_dest_dir "${destroot}${python.prefix}/lib/pkgconfig"
        set pc_dest_file "${pc_dest_dir}/pygobject-3.0.pc"

        xinstall -d "${pc_dest_dir}"
        copy "${pc_src_file}" "${pc_dest_file}"
        reinplace "s|@prefix@|${python.prefix}|" ${pc_dest_file}
        reinplace "s|@exec_prefix@|${python.prefix}|" ${pc_dest_file}
        reinplace "s|@includedir@|${python.include}/pygobject|" ${pc_dest_file}
        reinplace "s|@datadir@|\${prefix}/share|" ${pc_dest_file}
        reinplace "s|@datarootdir@|\${prefix}/share|" ${pc_dest_file}
        reinplace "s|@VERSION@|${version}|" ${pc_dest_file}
    }

    livecheck.type          none
} else {
    livecheck.type          gnome
    livecheck.name          ${my_name}
}
