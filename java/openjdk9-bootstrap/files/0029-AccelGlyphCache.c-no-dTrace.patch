From 73c62bf78dfbe419e70ba0efcbeae961ec6d2ac3 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Mon, 21 Jul 2025 03:04:13 +0800
Subject: [PATCH 29/31] AccelGlyphCache.c: no dTrace

---
 .../native/common/font/AccelGlyphCache.c      | 49 +++++++++----------
 1 file changed, 24 insertions(+), 25 deletions(-)

diff --git a/jdk/src/java.desktop/share/native/common/font/AccelGlyphCache.c b/jdk/src/java.desktop/share/native/common/font/AccelGlyphCache.c
index 67729ad7ec..dac9a0800b 100644
--- a/jdk/src/java.desktop/share/native/common/font/AccelGlyphCache.c
+++ b/jdk/src/java.desktop/share/native/common/font/AccelGlyphCache.c
@@ -66,12 +66,12 @@ AccelGlyphCache_Init(jint width, jint height,
 {
     GlyphCacheInfo *gcinfo;
 
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Init");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Init");
 
     gcinfo = (GlyphCacheInfo *)malloc(sizeof(GlyphCacheInfo));
     if (gcinfo == NULL) {
-        J2dRlsTraceLn(J2D_TRACE_ERROR,
-            "AccelGlyphCache_Init: could not allocate GlyphCacheInfo");
+//        J2dRlsTraceLn(J2D_TRACE_ERROR,
+//            "AccelGlyphCache_Init: could not allocate GlyphCacheInfo");
         return NULL;
     }
 
@@ -110,7 +110,7 @@ AccelGlyphCache_AddGlyph(GlyphCacheInfo *cache, GlyphInfo *glyph)
     jint w = glyph->width;
     jint h = glyph->height;
 
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_AddGlyph");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_AddGlyph");
 
     if ((glyph->width > cache->cellWidth) ||
         (glyph->height > cache->cellHeight))
@@ -142,7 +142,7 @@ AccelGlyphCache_AddGlyph(GlyphCacheInfo *cache, GlyphInfo *glyph)
             // create new CacheCellInfo
             cellinfo = (CacheCellInfo *)malloc(sizeof(CacheCellInfo));
             if (cellinfo == NULL) {
-                J2dTraceLn(J2D_TRACE_ERROR, "could not allocate CellInfo");
+//                J2dTraceLn(J2D_TRACE_ERROR, "could not allocate CellInfo");
                 return NULL;
             }
 
@@ -254,7 +254,7 @@ AccelGlyphCache_Invalidate(GlyphCacheInfo *cache)
 {
     CacheCellInfo *cellinfo;
 
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Invalidate");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Invalidate");
 
     if (cache == NULL) {
         return;
@@ -286,7 +286,7 @@ AccelGlyphCache_Free(GlyphCacheInfo *cache)
 {
     CacheCellInfo *cellinfo;
 
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Free");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_Free");
 
     if (cache == NULL) {
         return;
@@ -318,9 +318,9 @@ void
 AccelGlyphCache_AddCellInfo(GlyphInfo *glyph, CacheCellInfo *cellInfo)
 {
     // assert (glyph != NULL && cellInfo != NULL)
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_AddCellInfo");
-    J2dTraceLn2(J2D_TRACE_VERBOSE, "  glyph 0x%x: adding cell 0x%x to the list",
-                glyph, cellInfo);
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_AddCellInfo");
+//    J2dTraceLn2(J2D_TRACE_VERBOSE, "  glyph 0x%x: adding cell 0x%x to the list",
+//                glyph, cellInfo);
 
     cellInfo->glyphInfo = glyph;
     cellInfo->nextGCI = glyph->cellInfo;
@@ -337,12 +337,12 @@ AccelGlyphCache_RemoveCellInfo(GlyphInfo *glyph, CacheCellInfo *cellInfo)
     CacheCellInfo *currCellInfo = glyph->cellInfo;
     CacheCellInfo *prevInfo = NULL;
     // assert (glyph!= NULL && glyph->cellInfo != NULL && cellInfo != NULL)
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_RemoveCellInfo");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_RemoveCellInfo");
     do {
         if (currCellInfo == cellInfo) {
-            J2dTraceLn2(J2D_TRACE_VERBOSE,
-                        "  glyph 0x%x: removing cell 0x%x from glyph's list",
-                        glyph, currCellInfo);
+//            J2dTraceLn2(J2D_TRACE_VERBOSE,
+//                        "  glyph 0x%x: removing cell 0x%x from glyph's list",
+//                        glyph, currCellInfo);
             if (prevInfo == NULL) { // it's the head, chop-chop
                 glyph->cellInfo = currCellInfo->nextGCI;
             } else {
@@ -355,9 +355,9 @@ AccelGlyphCache_RemoveCellInfo(GlyphInfo *glyph, CacheCellInfo *cellInfo)
         prevInfo = currCellInfo;
         currCellInfo = currCellInfo->nextGCI;
     } while (currCellInfo != NULL);
-    J2dTraceLn2(J2D_TRACE_WARNING, "AccelGlyphCache_RemoveCellInfo: "\
-                "no cell 0x%x in glyph 0x%x's cell list",
-                cellInfo, glyph);
+//    J2dTraceLn2(J2D_TRACE_WARNING, "AccelGlyphCache_RemoveCellInfo: "\
+//                "no cell 0x%x in glyph 0x%x's cell list",
+//                cellInfo, glyph);
 }
 
 /**
@@ -368,7 +368,7 @@ AccelGlyphCache_RemoveAllCellInfos(GlyphInfo *glyph)
 {
     CacheCellInfo *currCell, *prevCell;
 
-    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_RemoveAllCellInfos");
+//    J2dTraceLn(J2D_TRACE_INFO, "AccelGlyphCache_RemoveAllCellInfos");
 
     if (glyph == NULL || glyph->cellInfo == NULL) {
         return;
@@ -394,22 +394,21 @@ CacheCellInfo *
 AccelGlyphCache_GetCellInfoForCache(GlyphInfo *glyph, GlyphCacheInfo *cache)
 {
     // assert (glyph != NULL && cache != NULL)
-    J2dTraceLn(J2D_TRACE_VERBOSE2, "AccelGlyphCache_GetCellInfoForCache");
+//    J2dTraceLn(J2D_TRACE_VERBOSE2, "AccelGlyphCache_GetCellInfoForCache");
 
     if (glyph->cellInfo != NULL) {
         CacheCellInfo *cellInfo = glyph->cellInfo;
         do {
             if (cellInfo->cacheInfo == cache) {
-                J2dTraceLn3(J2D_TRACE_VERBOSE2,
-                            "  glyph 0x%x: found cell 0x%x for cache 0x%x",
-                            glyph, cellInfo, cache);
+//                J2dTraceLn3(J2D_TRACE_VERBOSE2,
+//                            "  glyph 0x%x: found cell 0x%x for cache 0x%x",
+//                            glyph, cellInfo, cache);
                 return cellInfo;
             }
             cellInfo = cellInfo->nextGCI;
         } while (cellInfo != NULL);
     }
-    J2dTraceLn2(J2D_TRACE_VERBOSE2, "  glyph 0x%x: no cell for cache 0x%x",
-                glyph, cache);
+//    J2dTraceLn2(J2D_TRACE_VERBOSE2, "  glyph 0x%x: no cell for cache 0x%x",
+//                glyph, cache);
     return NULL;
 }
-
-- 
2.24.3 (Apple Git-128)

