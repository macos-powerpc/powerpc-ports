From d2a55c0671a566ca2e43c8e12027cd5a643f53ea Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Mon, 21 Jul 2025 02:54:34 +0800
Subject: [PATCH 28/31] CUPSfuncs.c: hack this to work

---
 .../unix/native/common/awt/CUPSfuncs.c        | 33 +++++++++----------
 1 file changed, 16 insertions(+), 17 deletions(-)

diff --git a/jdk/src/java.desktop/unix/native/common/awt/CUPSfuncs.c b/jdk/src/java.desktop/unix/native/common/awt/CUPSfuncs.c
index 0f8d024026..59d6ef8588 100644
--- a/jdk/src/java.desktop/unix/native/common/awt/CUPSfuncs.c
+++ b/jdk/src/java.desktop/unix/native/common/awt/CUPSfuncs.c
@@ -173,9 +173,9 @@ Java_sun_print_CUPSPrinter_getCupsServer(JNIEnv *env,
     if (server != NULL) {
         // Is this a local domain socket?
         if (strncmp(server, "/", 1) == 0) {
-            cServer = JNU_NewStringPlatform(env, "localhost");
+//            cServer = JNU_NewStringPlatform(env, "localhost");
         } else {
-            cServer = JNU_NewStringPlatform(env, server);
+//            cServer = JNU_NewStringPlatform(env, server);
         }
     }
     return cServer;
@@ -211,7 +211,7 @@ Java_sun_print_CUPSPrinter_getCupsDefaultPrinter(JNIEnv *env,
     if (dest != NULL) {
         defaultPrinter = dest->name;
         if (defaultPrinter != NULL) {
-            cDefPrinter = JNU_NewStringPlatform(env, defaultPrinter);
+//            cDefPrinter = JNU_NewStringPlatform(env, defaultPrinter);
         }
     }
     j2d_cupsFreeDests(num_dests, dests);
@@ -263,7 +263,7 @@ Java_sun_print_CUPSPrinter_getMedia(JNIEnv *env,
     name = (*env)->GetStringUTFChars(env, printer, NULL);
     if (name == NULL) {
         (*env)->ExceptionClear(env);
-        JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
+//        JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
         return NULL;
     }
 
@@ -299,28 +299,28 @@ Java_sun_print_CUPSPrinter_getMedia(JNIEnv *env,
             j2d_ppdClose(ppd);
             DPRINTF("CUPSfuncs::bad alloc new array\n", "")
             (*env)->ExceptionClear(env);
-            JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//            JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
             return NULL;
         }
 
         for (i = 0; optionPage!=NULL && i<nPages; i++) {
             choice = (optionPage->choices)+i;
-            utf_str = JNU_NewStringPlatform(env, choice->text);
+//            utf_str = JNU_NewStringPlatform(env, choice->text);
             if (utf_str == NULL) {
                 unlink(filename);
                 j2d_ppdClose(ppd);
                 DPRINTF("CUPSfuncs::bad alloc new string ->text\n", "")
-                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
                 return NULL;
             }
             (*env)->SetObjectArrayElement(env, nameArray, i*2, utf_str);
             (*env)->DeleteLocalRef(env, utf_str);
-            utf_str = JNU_NewStringPlatform(env, choice->choice);
+//            utf_str = JNU_NewStringPlatform(env, choice->choice);
             if (utf_str == NULL) {
                 unlink(filename);
                 j2d_ppdClose(ppd);
                 DPRINTF("CUPSfuncs::bad alloc new string ->choice\n", "")
-                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
                 return NULL;
             }
             (*env)->SetObjectArrayElement(env, nameArray, i*2+1, utf_str);
@@ -329,23 +329,23 @@ Java_sun_print_CUPSPrinter_getMedia(JNIEnv *env,
 
         for (i = 0; optionTray!=NULL && i<nTrays; i++) {
             choice = (optionTray->choices)+i;
-            utf_str = JNU_NewStringPlatform(env, choice->text);
+//            utf_str = JNU_NewStringPlatform(env, choice->text);
             if (utf_str == NULL) {
                 unlink(filename);
                 j2d_ppdClose(ppd);
                 DPRINTF("CUPSfuncs::bad alloc new string text\n", "")
-                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
                 return NULL;
             }
             (*env)->SetObjectArrayElement(env, nameArray,
                                           (nPages+i)*2, utf_str);
             (*env)->DeleteLocalRef(env, utf_str);
-            utf_str = JNU_NewStringPlatform(env, choice->choice);
+//            utf_str = JNU_NewStringPlatform(env, choice->choice);
             if (utf_str == NULL) {
                 unlink(filename);
                 j2d_ppdClose(ppd);
                 DPRINTF("CUPSfuncs::bad alloc new string choice\n", "")
-                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//                JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
                 return NULL;
             }
             (*env)->SetObjectArrayElement(env, nameArray,
@@ -358,7 +358,6 @@ Java_sun_print_CUPSPrinter_getMedia(JNIEnv *env,
     return nameArray;
 }
 
-
 /*
  * Returns list of page sizes and imageable area.
  */
@@ -379,7 +378,7 @@ Java_sun_print_CUPSPrinter_getPageSizes(JNIEnv *env,
     const char *name = (*env)->GetStringUTFChars(env, printer, NULL);
     if (name == NULL) {
         (*env)->ExceptionClear(env);
-        JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
+//        JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
         return NULL;
     }
 
@@ -405,7 +404,7 @@ Java_sun_print_CUPSPrinter_getPageSizes(JNIEnv *env,
             j2d_ppdClose(ppd);
             DPRINTF("CUPSfuncs::bad alloc new float array\n", "")
             (*env)->ExceptionClear(env);
-            JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
+//            JNU_ThrowOutOfMemoryError(env, "OutOfMemoryError");
             return NULL;
         }
 
@@ -414,7 +413,7 @@ Java_sun_print_CUPSPrinter_getPageSizes(JNIEnv *env,
             unlink(filename);
             j2d_ppdClose(ppd);
             (*env)->ExceptionClear(env);
-            JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
+//            JNU_ThrowOutOfMemoryError(env, "Could not create printer name");
             return NULL;
         }
         for (i = 0; i<option->num_choices; i++) {
-- 
2.24.3 (Apple Git-128)

