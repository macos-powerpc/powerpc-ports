From 7402cc884e9e21744f394e3870be784e70ba9609 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Sun, 28 Sep 2025 03:38:00 +0800
Subject: [PATCH] Unbreak build with LLVM-7

---
 src/gallium/auxiliary/draw/draw_llvm.c        | 20 +++++++
 .../auxiliary/gallivm/lp_bld_debug.cpp        | 54 +++++++++++++++----
 .../auxiliary/gallivm/lp_bld_jit_types.c      |  4 ++
 .../auxiliary/gallivm/lp_bld_nir_soa.c        |  6 +++
 .../auxiliary/gallivm/lp_bld_passmgr.c        |  4 ++
 .../auxiliary/gallivm/lp_bld_sample_soa.c     |  2 +
 src/gallium/drivers/llvmpipe/lp_state_cs.c    |  8 +++
 src/gallium/drivers/llvmpipe/lp_state_fs.c    |  4 ++
 .../llvmpipe/lp_state_fs_linear_llvm.c        |  4 ++
 9 files changed, 97 insertions(+), 9 deletions(-)

diff --git src/gallium/auxiliary/draw/draw_llvm.c src/gallium/auxiliary/draw/draw_llvm.c
index 2d0053ab0b9..edf14b7e7e8 100644
--- src/gallium/auxiliary/draw/draw_llvm.c
+++ src/gallium/auxiliary/draw/draw_llvm.c
@@ -1684,8 +1684,12 @@ draw_llvm_generate(struct draw_llvm *llvm, struct draw_llvm_variant *variant)
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    memset(&vs_type, 0, sizeof vs_type);
@@ -2419,8 +2423,12 @@ draw_gs_llvm_generate(struct draw_llvm *llvm,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    lp_build_context_init(&bld, gallivm, lp_type_int(32));
@@ -2999,8 +3007,12 @@ draw_tcs_llvm_generate(struct draw_llvm *llvm,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    lp_build_context_init(&bld, gallivm, lp_type_int(32));
@@ -3076,8 +3088,12 @@ draw_tcs_llvm_generate(struct draw_llvm *llvm,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    resources_ptr = LLVMGetParam(variant_coro, 0);
@@ -3590,8 +3606,12 @@ draw_tes_llvm_generate(struct draw_llvm *llvm,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    lp_build_context_init(&bld, gallivm, lp_type_int(32));
diff --git src/gallium/auxiliary/gallivm/lp_bld_debug.cpp src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
index e5a7242fa78..ac867b62e47 100644
--- src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
+++ src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
@@ -292,31 +292,63 @@ lp_bld_debug_info_type(gallivm_state *gallivm, LLVMTypeRef type)
 
    if (kind == LLVMHalfTypeKind)
       return LLVMDIBuilderCreateBasicType(
-         gallivm->di_builder, "float16_t", strlen("float16_t"), 16, llvm::dwarf::DW_ATE_float, LLVMDIFlagZero);
+         gallivm->di_builder, "float16_t", strlen("float16_t"), 16, llvm::dwarf::DW_ATE_float
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
    if (kind == LLVMFloatTypeKind)
       return LLVMDIBuilderCreateBasicType(
-         gallivm->di_builder, "float", strlen("float"), 32, llvm::dwarf::DW_ATE_float, LLVMDIFlagZero);
+         gallivm->di_builder, "float", strlen("float"), 32, llvm::dwarf::DW_ATE_float
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
    if (kind == LLVMDoubleTypeKind)
       return LLVMDIBuilderCreateBasicType(
-         gallivm->di_builder, "double", strlen("double"), 64, llvm::dwarf::DW_ATE_float, LLVMDIFlagZero);
+         gallivm->di_builder, "double", strlen("double"), 64, llvm::dwarf::DW_ATE_float
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
 
    if (kind == LLVMIntegerTypeKind) {
       uint32_t bit_size = LLVMGetIntTypeWidth(type);
       if (bit_size == 1)
          return LLVMDIBuilderCreateBasicType(
-            gallivm->di_builder, "bool", strlen("bool"), 1, llvm::dwarf::DW_ATE_unsigned, LLVMDIFlagZero);
+            gallivm->di_builder, "bool", strlen("bool"), 1, llvm::dwarf::DW_ATE_unsigned
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
       if (bit_size == 8)
          return LLVMDIBuilderCreateBasicType(
-            gallivm->di_builder, "int8_t", strlen("int8_t"), 8, llvm::dwarf::DW_ATE_unsigned, LLVMDIFlagZero);
+            gallivm->di_builder, "int8_t", strlen("int8_t"), 8, llvm::dwarf::DW_ATE_unsigned
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
       if (bit_size == 16)
          return LLVMDIBuilderCreateBasicType(
-            gallivm->di_builder, "int16_t", strlen("int16_t"), 16, llvm::dwarf::DW_ATE_unsigned, LLVMDIFlagZero);
+            gallivm->di_builder, "int16_t", strlen("int16_t"), 16, llvm::dwarf::DW_ATE_unsigned
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
       if (bit_size == 32)
          return LLVMDIBuilderCreateBasicType(
-            gallivm->di_builder, "int32_t", strlen("int32_t"), 32, llvm::dwarf::DW_ATE_unsigned, LLVMDIFlagZero);
+            gallivm->di_builder, "int32_t", strlen("int32_t"), 32, llvm::dwarf::DW_ATE_unsigned
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
       if (bit_size == 64)
          return LLVMDIBuilderCreateBasicType(
-            gallivm->di_builder, "int64_t", strlen("int64_t"), 64, llvm::dwarf::DW_ATE_unsigned, LLVMDIFlagZero);
+            gallivm->di_builder, "int64_t", strlen("int64_t"), 64, llvm::dwarf::DW_ATE_unsigned
+#if LLVM_VERSION_MAJOR >= 8
+            , LLVMDIFlagZero
+#endif
+            );
    }
 
    if (kind == LLVMFunctionTypeKind) {
@@ -385,7 +417,11 @@ lp_function_add_debug_info(gallivm_state *gallivm, LLVMValueRef func, LLVMTypeRe
    
       LLVMDIBuilderCreateCompileUnit(
          gallivm->di_builder, LLVMDWARFSourceLanguageC11, gallivm->file, gallivm->file_name, strlen(gallivm->file_name),
-         0, NULL, 0, 0, NULL, 0, LLVMDWARFEmissionFull, 0, 0, 0, "/", 1, "", 0);
+         0, NULL, 0, 0, NULL, 0, LLVMDWARFEmissionFull, 0, 0, 0
+#if LLVM_VERSION_MAJOR >= 8
+            , "/", 1, "", 0
+#endif
+         );
    }
 
    LLVMMetadataRef di_function_type = lp_bld_debug_info_type(gallivm, func_type);
diff --git src/gallium/auxiliary/gallivm/lp_bld_jit_types.c src/gallium/auxiliary/gallivm/lp_bld_jit_types.c
index 6a453207193..594edea931e 100644
--- src/gallium/auxiliary/gallivm/lp_bld_jit_types.c
+++ src/gallium/auxiliary/gallivm/lp_bld_jit_types.c
@@ -75,7 +75,11 @@ lp_llvm_descriptor_base(struct gallivm_state *gallivm,
 
    LLVMValueRef binding_offset = LLVMBuildMul(builder, binding_index, lp_build_const_int32(gallivm, sizeof(struct lp_descriptor)), "");
    LLVMTypeRef int64_type = LLVMInt64TypeInContext(gallivm->context);
+#if LLVM_VERSION_MAJOR >= 9
    binding_offset = LLVMBuildIntCast2(builder, binding_offset, int64_type, false, "");
+#else
+   binding_offset = LLVMBuildIntCast(builder, binding_offset, int64_type, "");
+#endif
 
    LLVMValueRef desc_ptr = LLVMBuildPtrToInt(builder, desc_set_base, int64_type, "");
    return LLVMBuildAdd(builder, desc_ptr, binding_offset, "");
diff --git src/gallium/auxiliary/gallivm/lp_bld_nir_soa.c src/gallium/auxiliary/gallivm/lp_bld_nir_soa.c
index c998c18e888..343589599d8 100644
--- src/gallium/auxiliary/gallivm/lp_bld_nir_soa.c
+++ src/gallium/auxiliary/gallivm/lp_bld_nir_soa.c
@@ -4375,10 +4375,12 @@ lp_translate_atomic_op(nir_atomic_op op)
    case nir_atomic_op_umax: return LLVMAtomicRMWBinOpUMax;
    case nir_atomic_op_imin: return LLVMAtomicRMWBinOpMin;
    case nir_atomic_op_imax: return LLVMAtomicRMWBinOpMax;
+#if LLVM_VERSION_MAJOR >= 9
    case nir_atomic_op_fadd: return LLVMAtomicRMWBinOpFAdd;
 #if LLVM_VERSION_MAJOR >= 15
    case nir_atomic_op_fmin: return LLVMAtomicRMWBinOpFMin;
    case nir_atomic_op_fmax: return LLVMAtomicRMWBinOpFMax;
+#endif
 #endif
    default:          UNREACHABLE("Unexpected atomic");
    }
@@ -5700,7 +5702,11 @@ visit_block(struct lp_build_nir_soa_context *bld, nir_block *block)
          nir_instr_debug_info *debug_info = nir_instr_get_debug_info(instr);
          LLVMMetadataRef di_loc = LLVMDIBuilderCreateDebugLocation(
             gallivm->context, debug_info->nir_line, 1, gallivm->di_function, NULL);
+#if LLVM_VERSION_MAJOR >= 9
          LLVMSetCurrentDebugLocation2(gallivm->builder, di_loc);
+#else
+         LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
 
          LLVMBuildStore(gallivm->builder, mask_vec(bld), bld->debug_exec_mask);
       }
diff --git src/gallium/auxiliary/gallivm/lp_bld_passmgr.c src/gallium/auxiliary/gallivm/lp_bld_passmgr.c
index 5dd38251cf1..2acc58910d4 100644
--- src/gallium/auxiliary/gallivm/lp_bld_passmgr.c
+++ src/gallium/auxiliary/gallivm/lp_bld_passmgr.c
@@ -43,6 +43,10 @@
 #include <llvm-c/Transforms/IPO.h>
 #endif
 #include <llvm-c/Transforms/Coroutines.h>
+#else
+#include <llvm-c/Transforms/InstCombine.h>
+#include <llvm-c/Transforms/Scalar.h>
+#include <llvm-c/Transforms/Utils.h>
 #endif
 
 #if USE_NEW_PASS == 0
diff --git src/gallium/auxiliary/gallivm/lp_bld_sample_soa.c src/gallium/auxiliary/gallivm/lp_bld_sample_soa.c
index ec7a1bcba13..2fa526ddbcb 100644
--- src/gallium/auxiliary/gallivm/lp_bld_sample_soa.c
+++ src/gallium/auxiliary/gallivm/lp_bld_sample_soa.c
@@ -4544,11 +4544,13 @@ lp_build_do_atomic_soa(struct gallivm_state *gallivm,
       case LLVMAtomicRMWBinOpUMin:
          valid &= integer;
          break;
+#if LLVM_VERSION_MAJOR >= 9
       case LLVMAtomicRMWBinOpFAdd:
       case LLVMAtomicRMWBinOpFSub:
 #if LLVM_VERSION_MAJOR >= 15
          case LLVMAtomicRMWBinOpFMax:
          case LLVMAtomicRMWBinOpFMin:
+#endif
 #endif
          valid &= !integer;
          break;
diff --git src/gallium/drivers/llvmpipe/lp_state_cs.c src/gallium/drivers/llvmpipe/lp_state_cs.c
index 916cf362c2e..e244abc9446 100644
--- src/gallium/drivers/llvmpipe/lp_state_cs.c
+++ src/gallium/drivers/llvmpipe/lp_state_cs.c
@@ -581,8 +581,12 @@ generate_compute(struct llvmpipe_context *lp,
       LLVMPositionBuilderAtEnd(builder, block);
 
       if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
          LLVMSetCurrentDebugLocation2(
            gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+         LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
       }
 
       if (is_mesh) {
@@ -718,8 +722,12 @@ generate_compute(struct llvmpipe_context *lp,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    struct lp_build_loop_state loop_state;
diff --git src/gallium/drivers/llvmpipe/lp_state_fs.c src/gallium/drivers/llvmpipe/lp_state_fs.c
index 5e1384210b8..fcc7600638e 100644
--- src/gallium/drivers/llvmpipe/lp_state_fs.c
+++ src/gallium/drivers/llvmpipe/lp_state_fs.c
@@ -3328,8 +3328,12 @@ generate_fragment(struct llvmpipe_context *lp,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    /* code generated texture sampling */
diff --git src/gallium/drivers/llvmpipe/lp_state_fs_linear_llvm.c src/gallium/drivers/llvmpipe/lp_state_fs_linear_llvm.c
index d0636000a92..61e759b9275 100644
--- src/gallium/drivers/llvmpipe/lp_state_fs_linear_llvm.c
+++ src/gallium/drivers/llvmpipe/lp_state_fs_linear_llvm.c
@@ -329,8 +329,12 @@ llvmpipe_fs_variant_linear_llvm(struct llvmpipe_context *lp,
    LLVMPositionBuilderAtEnd(builder, block);
 
    if (gallivm->di_function) {
+#if LLVM_VERSION_MAJOR >= 9
       LLVMSetCurrentDebugLocation2(
          gallivm->builder, LLVMDIBuilderCreateDebugLocation(gallivm->context, 0, 0, gallivm->di_function, NULL));
+#else
+      LLVMSetCurrentDebugLocation(gallivm->builder, NULL);
+#endif
    }
 
    struct lp_build_context bld;
