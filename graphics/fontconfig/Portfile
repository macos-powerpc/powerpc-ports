# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   gitlab 1.0
PortGroup                   muniversal 1.0

gitlab.instance             https://gitlab.freedesktop.org

name                        fontconfig
gitlab.setup                ${name} ${name} 2.17.0
revision                    0
categories                  graphics
maintainers                 {ryandesign @ryandesign}
license                     fontconfig

description                 XML-based font configuration API for X Windows
long_description            Fontconfig is a library for configuring \
                            and customizing font access.

homepage                    https://www.freedesktop.org/wiki/Software/fontconfig
checksums                   rmd160  98f0d653aeacda154e2736a5544c4540124bece4 \
                            sha256  486c53e63c07cefd56ccd1234a665bc45fa2f37072c189ccb06373b97c7d73c2 \
                            size    510849

set python_version          3.13

use_autoreconf              yes

depends_build-append        port:gettext \
                            port:gperf \
                            port:m4 \
                            path:bin/pkg-config:pkgconfig \
                            port:python[string map {. {}} ${python_version}]

depends_lib                 port:expat \
                            path:lib/pkgconfig/freetype2.pc:freetype \
                            port:gettext-runtime \
                            port:libiconv

# FIXME: This probably should not be here:
if {${os.platform} eq "darwin" && ${os.major} < 9} {
    set add_fonts           /usr/X11R6/lib/X11/fonts
} else {
    set add_fonts           /usr/X11/lib/X11/fonts
}
lappend add_fonts           ${prefix}/share/fonts
set docdir                  ${prefix}/share/doc/${name}

configure.checks.implicit_function_declaration.whitelist-append strchr

configure.args              --disable-silent-rules \
                            --enable-iconv \
                            --enable-shared \
                            --enable-static \
                            --with-expat=${prefix} \
                            --with-libiconv=${prefix} \
                            --with-libiconv-prefix=${prefix} \
                            --with-libintl-prefix=${prefix} \
                            HASDOCBOOK=no
configure.python            ${prefix}/bin/python${python_version}

# We put this into a pre-configure block so it can be evaluated _after_ platform selection.
pre-configure {
    configure.args-append   --with-add-fonts=[join ${add_fonts} ,]

    # Fix building for older macOS versions via MACOSX_DEPLOYMENT_TARGET
    # https://bugs.freedesktop.org/show_bug.cgi?id=102986
    if {${os.platform} eq "darwin" && [vercmp ${macosx_version} >= 10.12]} {
        if {[vercmp ${macosx_deployment_target} < 10.12]} {
            configure.args-append ac_cv_func_mkostemp=no
        }
    }
}

post-destroot {
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        AUTHORS \
        COPYING \
        NEWS \
        README.md \
        ${destroot}${docdir}
}

post-activate {
    # fc-cache can fail due to /Network/Library/Fonts being unavailable, so force success.
    system "${prefix}/bin/fc-cache -sv || true"
    system "${prefix}/bin/fc-cache -v || true"
}

pre-pkg {
    xinstall -m 0755 ${filespath}/postinstall ${package.scripts}/
    reinplace -locale C "s|@PREFIX@|${prefix}|g" ${package.scripts}/postinstall
    long_description-append  Install prefix: ${prefix}
}

platform macosx {
    lappend add_fonts       /Library/Fonts \
                            /Network/Library/Fonts \
                            /System/Library/Fonts
}

merger_arch_flag            no
merger_arch_compiler        yes
if {${os.arch} eq "i386"} {
    if { ${os.major} >= 10 } {
        set merger_configure_args(ppc) --with-arch=ppc
        set merger_configure_env(ppc)  CC_FOR_BUILD=${configure.cc}
    }
    set merger_configure_args(ppc64)   --with-arch=ppc64
    set merger_configure_env(ppc64)    CC_FOR_BUILD=${configure.cc}
} else {
    set merger_configure_args(i386)    --with-arch=i386
    set merger_configure_args(x86_64)  --with-arch=x86_64
    set merger_configure_env(i386)     CC_FOR_BUILD=${configure.cc}
    set merger_configure_env(x86_64)   CC_FOR_BUILD=${configure.cc}
}

livecheck.type              regex
livecheck.url               [lindex ${master_sites} 0]
livecheck.regex             ${name}-(\\d+(?:\\.\\d+)*\\.(?:\\d|\[0-8\]\\d))\\.tar
