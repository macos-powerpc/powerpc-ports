--- build/config/compiler/BUILD.gn.orig	2025-09-01 12:23:07
+++ build/config/compiler/BUILD.gn	2025-10-20 22:46:15
@@ -2221,7 +2221,7 @@
   }
 
   # TODO(crbug.com/355446806): Clean up and enable.
-  if (is_apple) {
+  if (false) {
     ldflags += [ "-Wl,-no_warn_duplicate_libraries" ]
   }
 
--- build/toolchain/apple/toolchain.gni.orig	2025-10-08 23:20:23
+++ build/toolchain/apple/toolchain.gni	2025-10-19 20:58:45
@@ -182,6 +182,10 @@
     cxx = compiler_prefix + _cxx
     ld = _cxx
 
+    cc = getenv("CC")
+    cxx = getenv("CXX")
+    ld = cxx
+
     # Set the explicit search path for clang++ so it uses the right linker
     # binary.
     if (!toolchain_uses_lld) {
@@ -215,6 +219,8 @@
     # Specify an explicit path for the strip binary.
     _strippath = "${prefix}llvm-strip"
     _installnametoolpath = "${prefix}llvm-install-name-tool"
+    _strippath = "strip"
+    _installnametoolpath = "install_name_tool"
     linker_driver_args += " -Wcrl,strippath,${_strippath} -Wcrl,installnametoolpath,${_installnametoolpath}"
     _enable_dsyms = enable_dsyms
     _save_unstripped_output = save_unstripped_output
@@ -232,8 +238,7 @@
     if (_enable_dsyms) {
       dsym_switch = " -Wcrl,dsym,{{root_out_dir}} "
       dsym_switch += "-Wcrl,dsymutilpath," +
-                     rebase_path("//tools/clang/dsymutil/bin/dsymutil",
-                                 root_build_dir) + " "
+                     "dsymutil" + " "
 
       dsym_output_dir =
           "{{root_out_dir}}/{{target_output_name}}{{output_extension}}.dSYM"
@@ -501,6 +506,8 @@
       # appropriate binary if there are multiple installs.
       nm = "${prefix}llvm-nm"
       otool = "${prefix}llvm-otool"
+      nm = "nm"
+      otool = "otool"
 
       link_command = "$linker_driver_env $linker_driver"
       link_command += " -Wcrl,otoolpath,$otool -Wcrl,nmpath,$nm"
