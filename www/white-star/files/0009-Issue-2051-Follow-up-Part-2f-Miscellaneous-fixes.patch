From 2bdc007ef26e6b6d876e867f6b878209b0064d3e Mon Sep 17 00:00:00 2001
From: Brian Smith <brian@dbsoft.org>
Date: Fri, 12 Sep 2025 10:37:35 -0500
Subject: [PATCH 09/14] Issue #2051 - Follow-up Part 2f: Miscellaneous fixes.
 Fix compile issue with MacPorts GCC 14. Fix null pointer dereference in
 OpenGL compositor. Fix recurcursive font loading due to TenFourFox code
 drift. Fix LazyScript size mismatch in debug builds. Fix crash due to missing
 auto release pool in debug builds. Fix keyboard input crash due to incorrect
 code disabling. Fix mouse events never having button pressed state.

---
 gfx/cairo/cairo/src/cairo-quartz-surface.c |  2 +-
 gfx/layers/opengl/CompositorOGL.cpp        |  6 ++++--
 gfx/thebes/gfxMacPlatformFontList.mm       | 22 ++++++++++++++++------
 js/src/jsscript.h                          |  2 +-
 toolkit/xre/nsNativeAppSupportCocoa.mm     |  6 ++++--
 widget/cocoa/TextInputHandler.mm           |  2 +-
 widget/cocoa/nsChildView.mm                | 22 ++++++++++++++++++----
 7 files changed, 45 insertions(+), 17 deletions(-)

diff --git a/gfx/cairo/cairo/src/cairo-quartz-surface.c b/gfx/cairo/cairo/src/cairo-quartz-surface.c
index d5a5ffd924..4a3aebf32b 100644
--- a/gfx/cairo/cairo/src/cairo-quartz-surface.c
+++ b/gfx/cairo/cairo/src/cairo-quartz-surface.c
@@ -2020,7 +2020,7 @@ _cairo_quartz_surface_finish (void *abstract_surface)
 
     if (surface->imageSurfaceEquiv) {
         if (surface->ownsData)
-            _cairo_image_surface_assume_ownership_of_data (surface->imageSurfaceEquiv);
+            _cairo_image_surface_assume_ownership_of_data ((cairo_image_surface_t *)surface->imageSurfaceEquiv);
 	cairo_surface_destroy (surface->imageSurfaceEquiv);
 	surface->imageSurfaceEquiv = NULL;
     } else if (surface->imageData && surface->ownsData) {
diff --git a/gfx/layers/opengl/CompositorOGL.cpp b/gfx/layers/opengl/CompositorOGL.cpp
index e51839d190..616a03ab77 100644
--- a/gfx/layers/opengl/CompositorOGL.cpp
+++ b/gfx/layers/opengl/CompositorOGL.cpp
@@ -1165,8 +1165,10 @@ CompositorOGL::DrawGeometry(const Geometry& aGeometry,
         static_cast<TexturedEffect*>(aEffectChain.mPrimaryEffect.get());
       source = texturedEffect->mTexture->AsSourceOGL();
     }
-    // This is used by IOSurface that use 0,0...w,h coordinate rather then 0,0..1,1.
-    program->SetTexCoordMultiplier(source->GetSize().width, source->GetSize().height);
+    if (source) {
+        // This is used by IOSurface that use 0,0...w,h coordinate rather then 0,0..1,1.
+        program->SetTexCoordMultiplier(source->GetSize().width, source->GetSize().height);
+    }
   }
 
   // XXX kip - These calculations could be performed once per layer rather than
diff --git a/gfx/thebes/gfxMacPlatformFontList.mm b/gfx/thebes/gfxMacPlatformFontList.mm
index ae0792bcbf..b0cbf67434 100644
--- a/gfx/thebes/gfxMacPlatformFontList.mm
+++ b/gfx/thebes/gfxMacPlatformFontList.mm
@@ -1464,12 +1464,22 @@ gfxMacPlatformFontList::PlatformGlobalFontFallback(const uint32_t aCh,
 
     return fontEntry;
 #else
-    uint32_t aCmapCount = 0;
-    return gfxPlatformFontList::GlobalFontFallback(aCh,
-                                                   aRunScript,
-                                                   aMatchStyle,
-                                                   aCmapCount,
-                                                   aMatchedFamily);
+    static bool recursing = false;
+    gfxFontEntry *retval = nullptr;
+    if (!recursing) {
+        uint32_t aCmapCount = 0;
+        // Try calling GlobalFontFallback once in case we were called
+        // directly.  Then stop and return nullptr so GlobalFontCallback
+        // will search the internal font table. 
+        recursing = true;
+        retval = gfxPlatformFontList::GlobalFontFallback(aCh,
+                                                         aRunScript,
+                                                         aMatchStyle,
+                                                         aCmapCount,
+                                                         aMatchedFamily);
+        recursing = false;
+    }
+	return retval;
 #endif
 }
 
diff --git a/js/src/jsscript.h b/js/src/jsscript.h
index 73ee0c0ed5..b1da13d159 100644
--- a/js/src/jsscript.h
+++ b/js/src/jsscript.h
@@ -2072,7 +2072,7 @@ class LazyScript : public gc::TenuredCell
     // Add padding so LazyScript is gc::Cell aligned. Make padding protected
     // instead of private to suppress -Wunused-private-field compiler warnings.
   protected:
-#if JS_BITS_PER_WORD == 32
+#if JS_BITS_PER_WORD == 32 && !defined(DEBUG)
     uint32_t padding;
 #endif
 
diff --git a/toolkit/xre/nsNativeAppSupportCocoa.mm b/toolkit/xre/nsNativeAppSupportCocoa.mm
index 197c2ee7a3..9be449add7 100644
--- a/toolkit/xre/nsNativeAppSupportCocoa.mm
+++ b/toolkit/xre/nsNativeAppSupportCocoa.mm
@@ -79,10 +79,12 @@ nsNativeAppSupportCocoa::Enable()
 
 NS_IMETHODIMP nsNativeAppSupportCocoa::Start(bool *_retval)
 {
+  NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT;
+
   int major, minor, bugfix;
+  NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
   nsCocoaFeatures::GetSystemVersion(major, minor, bugfix);
-
-  NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT;
+  [pool release];
 
   // Check that the OS version is supported, if not return false,
   // which will make the browser quit.  In principle we could display an
diff --git a/widget/cocoa/TextInputHandler.mm b/widget/cocoa/TextInputHandler.mm
index a43f2f8acb..3728817bd1 100644
--- a/widget/cocoa/TextInputHandler.mm
+++ b/widget/cocoa/TextInputHandler.mm
@@ -4067,7 +4067,7 @@ IMEInputHandler::OnHandleEvent(NSEvent* aEvent)
   NSTextInputContext* inputContext = [mView inputContext];
   return [inputContext handleEvent:aEvent];
 #else
-  return true;
+  return false;
 #endif
 }
 
diff --git a/widget/cocoa/nsChildView.mm b/widget/cocoa/nsChildView.mm
index 40a95fad00..f3d0d75c85 100644
--- a/widget/cocoa/nsChildView.mm
+++ b/widget/cocoa/nsChildView.mm
@@ -3343,16 +3343,12 @@ NSEvent* gLastDragMouseDownEvent = nil;
 
 - (void)installTextInputHandler:(TextInputHandler*)aHandler
 {
-#if defined(MAC_OS_X_VERSION_10_6) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6)
   mTextInputHandler = aHandler;
-#endif
 }
 
 - (void)uninstallTextInputHandler
 {
-#if defined(MAC_OS_X_VERSION_10_6) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6)
   mTextInputHandler = nullptr;
-#endif
 }
 
 - (bool)preRender:(NSOpenGLContext *)aGLContext
@@ -4993,11 +4989,29 @@ GetIntegerDeltaForEvent(NSEvent* aEvent)
     case NSOtherMouseDown:
     case NSOtherMouseUp:
     case NSOtherMouseDragged:
+    {
+#if !defined(MAC_OS_X_VERSION_10_6) || (MAC_OS_X_VERSION_MAX_ALLOWED < MAC_OS_X_VERSION_10_6)
+      // pressedMouseButtons: doesn't exist in the 10.4 SDK, so use the
+      // additional code below (TenFourFox issue 507).
+
+      NSInteger mouseButtons = [aMouseEvent buttonNumber];
+      if (mouseButtons == 0)
+        mouseEvent->buttons |= WidgetMouseEvent::eLeftButtonFlag;
+      else if (mouseButtons == 1)
+        mouseEvent->buttons |= WidgetMouseEvent::eRightButtonFlag;
+      else if (mouseButtons == 2)
+        mouseEvent->buttons |= WidgetMouseEvent::eMiddleButtonFlag;
+      else if (mouseButtons == 3)
+        mouseEvent->buttons |= WidgetMouseEvent::e4thButtonFlag;
+      else if (mouseButtons >= 4) // WRONG! but close enough
+        mouseEvent->buttons |= WidgetMouseEvent::e5thButtonFlag;
+#endif
       if ([aMouseEvent subtype] == NSTabletPointEventSubtype) {
         mouseEvent->pressure = [aMouseEvent pressure];
         MOZ_ASSERT(mouseEvent->pressure >= 0.0 && mouseEvent->pressure <= 1.0);
       }
       break;
+    }
 
     default:
       // Don't check other NSEvents for pressure.
-- 
2.50.1

