--- configure.ac	2025-10-14 21:52:31.000000000 +0800
+++ configure.ac	2025-10-27 16:38:42.000000000 +0800
@@ -2005,15 +2005,15 @@
           then
             # Check that ThinLTO is accepted.
             AX_CHECK_COMPILE_FLAG([-flto=thin],[
-              LTOFLAGS="-flto=thin -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+              LTOFLAGS="-flto=thin"
               LTOCFLAGS="-flto=thin"
               ],[
-              LTOFLAGS="-flto -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+              LTOFLAGS="-flto"
               LTOCFLAGS="-flto"
               ]
             )
           else
-            LTOFLAGS="-flto=${Py_LTO_POLICY} -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+            LTOFLAGS="-flto=${Py_LTO_POLICY}"
             LTOCFLAGS="-flto=${Py_LTO_POLICY}"
           fi
           ;;
@@ -2044,7 +2044,7 @@
       LDFLAGS_NOLTO="-fno-lto"
       case $ac_sys_system in
         Darwin*)
-          LTOFLAGS="-flto -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+          LTOFLAGS="-flto"
           LTOCFLAGS="-flto"
           ;;
         *)

--- configure	2025-10-14 21:52:31.000000000 +0800
+++ configure	2025-10-27 16:36:00.000000000 +0800
@@ -8718,19 +8718,19 @@
 if test "x$ax_cv_check_cflags___flto_thin" = xyes
 then :
 
-              LTOFLAGS="-flto=thin -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+              LTOFLAGS="-flto=thin"
               LTOCFLAGS="-flto=thin"
 
 else $as_nop
 
-              LTOFLAGS="-flto -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+              LTOFLAGS="-flto"
               LTOCFLAGS="-flto"
 
 
 fi
 
           else
-            LTOFLAGS="-flto=${Py_LTO_POLICY} -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+            LTOFLAGS="-flto=${Py_LTO_POLICY}"
             LTOCFLAGS="-flto=${Py_LTO_POLICY}"
           fi
           ;;
@@ -8797,7 +8797,7 @@
             LDFLAGS_NOLTO="-fno-lto"
       case $ac_sys_system in
         Darwin*)
-          LTOFLAGS="-flto -Wl,-export_dynamic -Wl,-object_path_lto,\"\$@\".lto"
+          LTOFLAGS="-flto"
           LTOCFLAGS="-flto"
           ;;
         *)

--- Makefile.pre.in	2025-10-14 21:52:31.000000000 +0800
+++ Makefile.pre.in	2025-10-27 16:34:34.000000000 +0800
@@ -56,8 +56,6 @@
 DFLAGS=         @DFLAGS@
 DTRACE_HEADERS= @DTRACE_HEADERS@
 DTRACE_OBJS=    @DTRACE_OBJS@
-DSYMUTIL=       @DSYMUTIL@
-DSYMUTIL_PATH=  @DSYMUTIL_PATH@
 
 GNULD=		@GNULD@
 
@@ -696,7 +694,7 @@
 
 .PHONY: build_all
 build_all:	check-clean-src check-app-store-compliance $(BUILDPYTHON) platform sharedmods \
-		gdbhooks Programs/_testembed scripts checksharedmods rundsymutil
+		gdbhooks Programs/_testembed scripts checksharedmods
 
 .PHONY: build_wasm
 build_wasm: check-clean-src $(BUILDPYTHON) platform sharedmods \
@@ -1375,23 +1373,6 @@
 checksharedmods: sharedmods $(PYTHON_FOR_BUILD_DEPS) $(BUILDPYTHON)
 	@$(RUNSHARED) $(PYTHON_FOR_BUILD) $(srcdir)/Tools/build/check_extension_modules.py
 
-.PHONY: rundsymutil
-rundsymutil: sharedmods $(PYTHON_FOR_BUILD_DEPS) $(BUILDPYTHON)
-	@if [ ! -z $(DSYMUTIL) ] ; then \
-		echo $(DSYMUTIL_PATH) $(BUILDPYTHON); \
-		$(DSYMUTIL_PATH) $(BUILDPYTHON); \
-		if test -f $(LDLIBRARY); then \
-			echo $(DSYMUTIL_PATH) $(LDLIBRARY); \
-			$(DSYMUTIL_PATH) $(LDLIBRARY); \
-		fi; \
-		for mod in X $(SHAREDMODS); do \
-			if test $$mod != X; then \
-				echo $(DSYMUTIL_PATH) $$mod; \
-				$(DSYMUTIL_PATH) $$mod; \
-			fi; \
-		done \
-	fi
-
 Modules/Setup.local:
 	@# Create empty Setup.local when file was deleted by user
 	echo "# Edit this file for local setup changes" > $@
@@ -2174,10 +2155,6 @@
 		  if test $$i != X; then \
 		    echo $(INSTALL_SHARED) $$i $(DESTSHARED)/`basename $$i`; \
 		    $(INSTALL_SHARED) $$i $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
-			if test -d "$$i.dSYM"; then \
-				echo $(DSYMUTIL_PATH) $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
-				$(DSYMUTIL_PATH) $(DESTDIR)$(DESTSHARED)/`basename $$i`; \
-			fi; \
 		  fi; \
 		done
 
@@ -2232,22 +2209,6 @@
 			-output $(DESTDIR)$(BINDIR)/python$(VERSION)-intel64$(EXE) \
 			$(DESTDIR)$(BINDIR)/python$(VERSION)$(EXE); \
 	fi
-	# Install macOS debug information (if available)
-	if test -d "$(BUILDPYTHON).dSYM"; then \
-		echo $(DSYMUTIL_PATH) $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
-		$(DSYMUTIL_PATH) $(DESTDIR)$(BINDIR)/python$(LDVERSION)$(EXE); \
-	fi
-	if test "$(PYTHONFRAMEWORKDIR)" = "no-framework" ; then \
-		if test -d "$(LDLIBRARY).dSYM"; then \
-			echo $(DSYMUTIL_PATH) $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
-			$(DSYMUTIL_PATH) $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
-		fi \
-	else \
-		if test -d "$(LDLIBRARY).dSYM"; then \
-			echo $(DSYMUTIL_PATH) $(DESTDIR)$(PYTHONFRAMEWORKPREFIX)/$(INSTSONAME); \
-      $(DSYMUTIL_PATH) $(DESTDIR)$(PYTHONFRAMEWORKPREFIX)/$(INSTSONAME); \
-		fi \
-	fi
 
 .PHONY: bininstall
 # We depend on commoninstall here to make sure the installation is already usable
@@ -2958,7 +2919,6 @@
 	find . -name '*.[oa]' -exec rm -f {} ';'
 	find . -name '*.s[ol]' -exec rm -f {} ';'
 	find . -name '*.so.[0-9]*.[0-9]*' -exec rm -f {} ';'
-	find . -name '*.lto' -exec rm -f {} ';'
 	find . -name '*.wasm' -exec rm -f {} ';'
 	find . -name '*.lst' -exec rm -f {} ';'
 	find build -name 'fficonfig.h' -exec rm -f {} ';' || true
