# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           elisp 1.0
PortGroup           github 1.0
PortGroup           meson 1.0

github.setup        djcb mu 1.12.13 v
revision            0
categories          mail
license             GPL-3
maintainers         {ra1nb0w @ra1nb0w} openmaintainer
description         Command-line tools to index and search e-mail (aka maildir-utils)
long_description \
    mu is a set of command-line tools for Linux/Unix that enable you to \
    quickly find the e-mails you are looking for. First, a tool called \
    mu-index fills a database with information about all your e-mails. After \
    that, you can easily search for them, using mu-find and its dedicated \
    query language.
homepage            https://www.djcbsoftware.nl/code/mu/
checksums           rmd160  bb16b2715a6c659f56c8b94b1390044662a14fa5 \
                    sha256  bc7c4dc1a3c86498efcbc9d61b4ff8c38630153c4a8f7e3af39c7f03c1c049bc \
                    size    1033829
github.tarball_from archive

compiler.c_standard     1999
compiler.cxx_standard   2017

# https://trac.macports.org/ticket/63364
compiler.blacklist      {clang < 900}

set py_ver              3.13
set py_ver_nodot        [string map {. {}} ${py_ver}]
configure.python        ${prefix}/bin/python${py_ver}

post-patch {
    reinplace -W ${worksrcpath} "s|/usr/bin/env python3|${configure.python}|" \
                        build-aux/date.py
}

# This fails with emacs port, but works with Apple emacs.
# See: https://trac.macports.org/ticket/72062
# https://github.com/djcb/mu/issues/2873
depends_build-append \
    bin:emacs:emacs \
    path:bin/pkg-config:pkgconfig \
    port:python${py_ver_nodot}

depends_lib-append \
    port:gmime3 \
    port:xapian-core

# TODO: is legacy-support wrapper needed?
# mu(63135) malloc: *** error for object 0xa04dc754: pointer being freed was not allocated

# FIXME: the app behaves weird: for example, `mu --help` fails:
# error: Could not convert: --nocolor = <false>
# But `mu --nocolor --help` works as expected.

variant emacs description "Build with emacs bindings" {
    depends_lib-append      path:${emacs_binary}:${emacs_binary_provider}
    configure.env-append    EMACS=${emacs_binary}
    build.env-append        ELCFLAGS=-Q
    configure.args-append   -Demacs=${emacs_binary}
}

variant guile description "Build with Guile 3.0/Scheme bindings" {
    depends_lib-append      port:guile-3.0
    configure.args-append   -Dguile=enabled
}

# disable "-rc" versions for livecheck
github.livecheck.regex  {([0-9.]+)}
