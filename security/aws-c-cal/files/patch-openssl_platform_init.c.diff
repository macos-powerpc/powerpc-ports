Get rid of symbols from openssl 1.0 which poison the build and break linking.

--- source/unix/openssl_platform_init.c	2025-06-04 06:03:34.000000000 +0800
+++ source/unix/openssl_platform_init.c	2025-08-18 19:51:51.000000000 +0800
@@ -156,7 +156,7 @@
 };
 
 bool s_resolve_hmac_102(void *module) {
-#if defined(OPENSSL_IS_OPENSSL)
+#if defined(OPENSSL_IS_OPENSSL10)
     hmac_ctx_init init_fn = (hmac_ctx_init)HMAC_CTX_init;
     hmac_ctx_clean_up clean_up_fn = (hmac_ctx_clean_up)HMAC_CTX_cleanup;
     hmac_update update_fn = (hmac_update)HMAC_Update;
@@ -342,8 +342,6 @@
             return s_resolve_hmac_lc(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_1_1_1:
             return s_resolve_hmac_111(module) ? version : AWS_LIBCRYPTO_NONE;
-        case AWS_LIBCRYPTO_1_0_2:
-            return s_resolve_hmac_102(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_BORINGSSL:
             return s_resolve_hmac_boringssl(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_NONE:
@@ -384,7 +382,7 @@
 extern int EVP_DigestFinal_ex(EVP_MD_CTX *, unsigned char *, unsigned int *) __attribute__((weak, used));
 
 bool s_resolve_md_102(void *module) {
-#if !defined(OPENSSL_IS_AWSLC)
+#if defined(OPENSSL_IS_OPENSSL10)
     evp_md_ctx_new md_create_fn = s_EVP_MD_CTX_create;
     evp_md_ctx_free md_destroy_fn = s_EVP_MD_CTX_destroy;
     evp_md_ctx_digest_init_ex md_init_ex_fn = EVP_DigestInit_ex;
@@ -520,8 +518,6 @@
             return s_resolve_md_lc(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_1_1_1:
             return s_resolve_md_111(module) ? version : AWS_LIBCRYPTO_NONE;
-        case AWS_LIBCRYPTO_1_0_2:
-            return s_resolve_md_102(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_BORINGSSL:
             return s_resolve_md_boringssl(module) ? version : AWS_LIBCRYPTO_NONE;
         case AWS_LIBCRYPTO_NONE:
