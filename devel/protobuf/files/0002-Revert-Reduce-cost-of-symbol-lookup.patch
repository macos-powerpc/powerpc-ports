From eec3bb6e0633e5f8e5fde3dcdda4d3b8edfbd5e7 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sat, 25 Oct 2025 14:09:00 +0800
Subject: [PATCH 2/4] Revert "Reduce cost of symbol lookup."

This reverts commit 67cf7eab6d7f2f1039520ff492e236af6d344c9f.
---
 src/google/protobuf/descriptor_database.cc | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/src/google/protobuf/descriptor_database.cc b/src/google/protobuf/descriptor_database.cc
index 5d1e7c081..40813d1c8 100644
--- a/src/google/protobuf/descriptor_database.cc
+++ b/src/google/protobuf/descriptor_database.cc
@@ -30,7 +30,6 @@
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_replace.h"
 #include "absl/strings/string_view.h"
-#include "absl/strings/strip.h"
 #include "google/protobuf/descriptor.pb.h"
 #include "google/protobuf/io/coded_stream.h"
 #include "google/protobuf/parse_context.h"
@@ -493,18 +492,6 @@ class EncodedDescriptorDatabase::DescriptorIndex {
       auto p = package(index);
       return absl::StrCat(p, p.empty() ? "" : ".", symbol(index));
     }
-
-    bool IsSubSymbolOf(const DescriptorIndex& index,
-                       absl::string_view super_symbol) const {
-      const auto consume_part = [&](absl::string_view part) {
-        if (!absl::ConsumePrefix(&super_symbol, part)) return false;
-        return super_symbol.empty() || absl::ConsumePrefix(&super_symbol, ".");
-      };
-      if (auto p = package(index); !p.empty()) {
-        if (!consume_part(p)) return false;
-      }
-      return consume_part(symbol(index));
-    }
   };
 
   struct SymbolCompare {
@@ -806,7 +793,8 @@ EncodedDescriptorDatabase::DescriptorIndex::FindSymbolOnlyFlat(
   auto iter =
       FindLastLessOrEqual(&by_symbol_flat_, name, by_symbol_.key_comp());
 
-  return iter != by_symbol_flat_.end() && iter->IsSubSymbolOf(*this, name)
+  return iter != by_symbol_flat_.end() &&
+                 IsSubSymbol(iter->AsString(*this), name)
              ? all_values_[iter->data_offset].value()
              : Value();
 }
-- 
2.51.0

