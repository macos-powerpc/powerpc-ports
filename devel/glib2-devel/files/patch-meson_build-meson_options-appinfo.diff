--- gio/giomodule.c	2025-10-21 22:26:53.000000000 +0800
+++ gio/giomodule.c	2025-10-25 18:23:53.000000000 +0800
@@ -67,12 +67,13 @@
 #endif
 #include <glib/gstdio.h>
 
-#if defined(G_OS_UNIX) && !defined(__APPLE__)
+#if defined(G_OS_UNIX)
+#if !defined(HAVE_COCOA) || defined(USE_APPINFO_GENERIC)
 #include "gdesktopappinfo.h"
-#endif
-#ifdef HAVE_COCOA
+#elif defined(HAVE_COCOA)
 #include "gosxappinfo.h"
 #endif
+#endif
 
 #ifdef __APPLE__
 #include <AvailabilityMacros.h>
@@ -1105,8 +1106,11 @@
 extern GType g_network_monitor_portal_get_type (void);
 #endif
 
-#ifdef HAVE_COCOA
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1090
 extern GType g_cocoa_notification_backend_get_type (void);
+#endif
+
+#ifdef HAVE_COCOA
 extern GType g_osx_network_monitor_get_type (void);
 #endif
 
@@ -1193,7 +1197,7 @@
 
   if (g_once_init_enter (&registered_extensions))
     {
-#if defined(G_OS_UNIX) && !defined(__APPLE__)
+#if defined(G_OS_UNIX) && (!defined(HAVE_COCOA) || defined(USE_APPINFO_GENERIC))
 #if !GLIB_CHECK_VERSION (3, 0, 0)
       ep = g_io_extension_point_register (G_DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME);
       g_io_extension_point_set_required_type (ep, G_TYPE_DESKTOP_APP_INFO_LOOKUP);
@@ -1361,9 +1365,10 @@
       g_type_ensure (g_registry_settings_backend_get_type ());
 #endif
 #ifdef HAVE_COCOA
-      g_type_ensure (g_cocoa_notification_backend_get_type ());
       g_type_ensure (g_nextstep_settings_backend_get_type ());
+#ifndef USE_APPINFO_GENERIC
       g_type_ensure (g_osx_app_info_get_type ());
+#endif
       g_type_ensure (g_osx_network_monitor_get_type ());
 #endif
 #ifdef G_OS_UNIX
@@ -1384,6 +1389,9 @@
       g_type_ensure (g_power_profile_monitor_portal_get_type ());
       g_type_ensure (g_proxy_resolver_portal_get_type ());
 #endif
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1090
+      g_type_ensure (g_cocoa_notification_backend_get_type ());
+#endif
 #ifdef G_OS_WIN32
       g_type_ensure (g_win32_notification_backend_get_type ());
       g_type_ensure (_g_winhttp_vfs_get_type ());
--- meson.options	2025-10-21 22:26:53.000000000 +0800
+++ meson.options	2019-11-13 18:27:07.000000000 -0300
@@ -1,3 +1,9 @@
+option('appinfo_backend',
+       type : 'combo',
+       choices : ['generic', 'native'],
+       value : 'generic',
+       description : 'appinfo backend to use; either freedesktop (for x11 based builds) or native (for quartz based builds)')
+       
 option('runtime_libdir',
        type : 'string',
        value : '',
--- gio/meson.build	2025-10-21 22:26:53.000000000 +0800
+++ gio/meson.build	2025-10-25 18:33:04.000000000 +0800
@@ -400,15 +400,30 @@
     unix_sources += files('gmemorymonitorpsi.c')
   endif
 
+  appinfo_backend = get_option('appinfo_backend')
   if glib_have_cocoa
     settings_sources += files('gnextstepsettingsbackend.m')
-    contenttype_sources += files('gcontenttype-osx.m')
-    unix_sources += files('gosxappinfo.m')
+    if appinfo_backend == 'native'
+      contenttype_sources += files('gcontenttype-osx.m')
+      unix_sources += files('gosxappinfo.m', 'gcocoanotificationbackend.m')
+      application_headers += files('gosxappinfo.h')
+    else
+      contenttype_sources += files('gcontenttype-fdo.c')
+      unix_sources += files('gdesktopappinfo.c')
+      gio_unix_include_headers += files('gdesktopappinfo.h')
+      launch_desktop_sources = files('gio-launch-desktop.c')
+      gio_launch_desktop = executable('gio-launch-desktop', launch_desktop_sources,
+        include_directories : glibinc,
+        install : true,
+        install_dir : multiarch_libexecdir,
+        install_tag : 'bin',
+        c_args : gio_c_args,
+        # intl.lib is not compatible with SAFESEH
+        link_args : noseh_link_args)
+    endif
     framework_dep = dependency('appleframeworks', modules : ['Foundation', 'CoreFoundation', 'AppKit'])
     platform_deps += [framework_dep]
-    unix_sources += files('gcocoanotificationbackend.m')
     unix_sources += files('gosxnetworkmonitor.c')
-    application_headers += files('gosxappinfo.h')
   else
     contenttype_sources += files('gcontenttype-fdo.c')
     unix_sources += files('gdesktopappinfo.c')
@@ -861,6 +876,13 @@
   )
 endif
 
+appinfo_backend = get_option('appinfo_backend') 
+if appinfo_backend == 'native'
+  glib_conf.set('USE_APPINFO_NATIVE', 1)
+else
+  glib_conf.set('USE_APPINFO_GENERIC', 1)
+endif
+
 if enable_dtrace
   gio_dtrace_obj = dtrace_obj_gen.process('gio_probes.d')
   gio_dtrace_hdr = dtrace_hdr_gen.process('gio_probes.d')
