# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0
PortGroup           github 1.0
PortGroup           linear_algebra 1.0
PortGroup           legacysupport 1.1
PortGroup           mpi 1.0

# clock_gettime
legacysupport.newest_darwin_requires_legacy 15

github.setup        starpu-runtime starpu 1.4.9 starpu-
revision            0
categories          devel
license             LGPL-2.1
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer
description         Unified runtime system for heterogeneous multicore architectures
long_description    StarPU is a runtime system that offers support for heterogeneous multicore machines. \
                    While many efforts are devoted to design efficient computation kernels \
                    for those architectures (e.g. to implement BLAS kernels on GPUs), StarPU \
                    not only takes care of offloading such kernels (and implementing data coherency \
                    across the machine), but it also makes sure the kernels are executed as efficiently as possible.
homepage            https://starpu.gitlabpages.inria.fr
checksums           rmd160  6dbd36ae9324ea628502649e9759809c19e62245 \
                    sha256  4b9bb0af466ab9c4bc8469deb6c497ac55bee90473e8282ad751b6a17c02b6a9 \
                    size    13732071
github.tarball_from archive

patchfiles          autogen.sh.patch

compiler.blacklist-append \
                    *gcc-4.* {clang < 400}
compilers.choose    fc f90 f77 cc

mpi.setup           require require_fortran \
                    -gcc44 -gcc45 -gcc46 -gcc47 -gcc48 -gcc49

use_autoreconf      yes
autoreconf.cmd      ./autogen.sh

depends_build-append \
                    port:autoconf \
                    port:automake \
                    port:libtool \
                    path:bin/pkg-config:pkgconfig
depends_lib-append  port:fftw-3 \
                    port:hwloc

configure.args-append \
                    --disable-silent-rules \
                    --with-mpiexec=${prefix}/bin/${mpi.exec} \
                    --with-mpicc=${prefix}/bin/${mpi.cc} \
                    --with-mpicxx=${prefix}/bin/${mpi.cxx} \
                    --with-mpifort=${prefix}/bin/${mpi.f90}

# Making a variant due to https://trac.macports.org/ticket/67273
variant hdf5 description "Enable HDF5 support" {
    depends_lib-append \
                    port:hdf5
    require_active_variants hdf5 fortran
    configure.args-append \
                    --enable-hdf5 \
                    --with-hdf5-include-dir=${prefix}/include \
                    --with-hdf5-lib-dir=${prefix}/lib
}

# Run complete test suite:
test.run            yes
test.cmd            make check -k
test.target
