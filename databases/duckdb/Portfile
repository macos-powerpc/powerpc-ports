# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake           1.1
PortGroup           github          1.0
PortGroup           legacysupport   1.1
PortGroup           openssl         1.0

github.setup        duckdb duckdb 1.4.0 v
revision            0

categories          databases
license             MIT
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

homepage            https://www.duckdb.org

description         DuckDB is an embeddable SQL OLAP Database Management System

long_description    \
    DuckDB is an embedded database designed to execute analytical SQL queries \
    fast while embedded in another process. It is designed to be easy to \
    install and easy to use. DuckDB has no external dependencies. DuckDB has \
    bindings for C/C++, Python and R. DuckDB is developed by the Database \
    Architectures group of the CWI.

checksums           rmd160  889c3a4d2ca770dfdc0f81c1927909c1907b30fc \
                    sha256  c06d08577555b3f80d19a6e09eec6c2e200b8d0165db4cd775aac97473e53dfc \
                    size    97540554
github.tarball_from archive

patchfiles-append   no-ccache.patch

# Instead of fixing the code, upstream decided to break the build
patchfiles-append   patch-platform.hpp.diff

set python_version  313
set python_branch   \
    [string index ${python_version} 0].[string range ${python_version} 1 end]

configure.args-append \
                    -DBUILD_EXTENSIONS='autocomplete\;icu\;parquet\;json' \
                    -DENABLE_EXTENSION_AUTOINSTALL=1 \
                    -DENABLE_EXTENSION_AUTOLOADING=1 \
                    -DOVERRIDE_GIT_DESCRIBE=v${version} \
                    -DPython3_EXECUTABLE=${prefix}/bin/python${python_branch}

compiler.cxx_standard 2011

depends_build-append \
                    path:bin/pkg-config:pkgconfig \
                    port:python${python_version} \
                    port:zstd

if {[string match *gcc* ${configure.compiler}]} {
    # Without the following setting, the build fails miserably at linking with every possible symbol undefined.
    # Undefined symbols: __ZNK6duckdb5Value14GetValueUnsafeItEET_v, __ZN6duckdb11LogicalType3MAPES0_S0_ etc.
    configure.args-append \
                    -DEXTENSION_STATIC_BUILD=TRUE

    if {${configure.build_arch} in [list arm i386 ppc]} {
        configure.ldflags-append \
                    -latomic
    }
}
